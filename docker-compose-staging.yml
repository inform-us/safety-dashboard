services:
  mongodb:
    container_name: safety_dashboard-db-staging
    image: mongo:7.0.5-jammy
    restart: on-failure
    volumes:
      - type: volume
        source: mongodb-data-volume
        target: /data/db
      - type: volume
        source: mongodb-config-volume
        target: /data/configdb
    networks:
      - app-net

  api:
    container_name: safety_dashboard-api-staging
    image: safety_dashboard-api:current
    restart: on-failure
    env_file:
      - compose/backend/staging/api.env
    depends_on:
      - mongodb
    networks:
      - app-net
    build:
      context: .
      dockerfile: ./compose/backend/Dockerfile
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${http_proxy}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${https_proxy}

  ui:
    container_name: safety_dashboard-ui-staging
    image: safety_dashboard-ui:current
    restart: on-failure
    depends_on:
      - api
    networks:
      - app-net
    build:
      context: frontend # this is the directory of the frontend code i.e. ./frontend
      dockerfile: ../compose/ui/Dockerfile
      args:
        - HTTP_PROXY=${HTTP_PROXY}
        - http_proxy=${http_proxy}
        - HTTPS_PROXY=${HTTPS_PROXY}
        - https_proxy=${https_proxy}
        - RUNNING_ENV=${RUNNING_ENV}

  nginx:
    container_name: safety_dashboard-nginx-staging
    image: nginx:1.23.3-alpine
    ports:
      - "${API_CLIENT_PORT_STAGING}:${API_CONTAINER_PORT}"
      - "${UI_CLIENT_PORT_STAGING}:${UI_CONTAINER_PORT}"
    volumes:
      - type: bind
        source: ./nginx/conf.d
        target: /etc/nginx/conf.d
      - type: bind
        source: ./nginx/certs
        target: /etc/nginx/certs
    depends_on:
      - api
      - ui
    networks:
      - app-net

networks:
  app-net:

volumes:
  mongodb-data-volume:
  mongodb-config-volume:
